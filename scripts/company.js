let companies = [];

// –°—Å—ã–ª–∫–∞ –Ω–∞ –±–∞–∑—É
const companiesRef = firebase.database().ref("companies");

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Firebase
function loadCompanies() {
  companiesRef.on("value", (snapshot) => {
    const data = snapshot.val();
    companies = [];

    if (data) {
      Object.keys(data).forEach((key) => {
        companies.push({ ...data[key], id: key });
      });
    }

    renderTable();
  });
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
function addCompany(company) {
  const newRef = companiesRef.push();
  newRef.set(company);
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
function deleteCompany(index) {
  const id = companies[index].id;
  firebase.database().ref(`companies/${id}`).remove();
}

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
function editCompany(index) {
  const company = companies[index];
  const newName = prompt("–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏:", company.name);
  const newContact = prompt("–ò–∑–º–µ–Ω–∏—Ç—å email:", company.contact);
  const newStatus = prompt("–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å (–ê–∫—Ç–∏–≤–Ω–∞ / –ù–∞ –ø–∞—É–∑–µ):", company.status);

  if (newName && newContact && newStatus && newContact.includes("@")) {
    const updated = {
      name: newName,
      contact: newContact,
      status: newStatus,
    };
    firebase.database().ref(`companies/${company.id}`).set(updated);
  } else {
    alert("‚ùó –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. Email –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å @");
  }
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
function renderTable() {
  const tbody = document.getElementById("companyTable");
  const filter = document.getElementById("statusFilter").value;
  const search = document.getElementById("searchInput").value.toLowerCase();

  tbody.innerHTML = "";

  companies.forEach((company, index) => {
    const matchStatus = filter === "all" || company.status === filter;
    const matchSearch = company.name.toLowerCase().includes(search);

    if (matchStatus && matchSearch) {
      const row = document.createElement("tr");

      row.innerHTML = `
        <td>${company.name}</td>
        <td>${company.contact}</td>
        <td>${company.status}</td>
        <td>
          <button onclick="editCompany(${index})">‚úèÔ∏è</button>
          <button onclick="deleteCompany(${index})">üóëÔ∏è</button>
        </td>
      `;

      tbody.appendChild(row);
    }
  });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ —á–µ—Ä–µ–∑ prompt
document.getElementById("addCompanyBtn").addEventListener("click", () => {
  const name = prompt("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏:");
  const contact = prompt("Email –∫–æ–º–ø–∞–Ω–∏–∏:");

  if (name && contact && contact.includes("@")) {
    const company = {
      name,
      contact,
      status: "–ê–∫—Ç–∏–≤–Ω–∞",
    };
    addCompany(company);
  } else {
    alert("‚ùó –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ.");
  }
});

// –§–∏–ª—å—Ç—Ä –∏ –ø–æ–∏—Å–∫
document.getElementById("searchInput").addEventListener("input", renderTable);
document.getElementById("statusFilter").addEventListener("change", renderTable);

// –ó–∞–ø—É—Å–∫
loadCompanies();
